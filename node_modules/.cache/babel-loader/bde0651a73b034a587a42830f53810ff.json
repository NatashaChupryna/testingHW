{"ast":null,"code":"var _jsxFileName = \"/Users/mcb/Desktop/Full stack/\\u0420\\u0435\\u043F\\u043E\\u0437\\u0438\\u0442\\u043E\\u0440\\u0456\\u0456\\u0308/goit-react-hw-07-phonebook/src/components/Form/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport { nanoid } from '@reduxjs/toolkit';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contactsOperations';\nimport { toast } from 'react-hot-toast';\nimport { ContactsForm, Title, Button, NameInput, NumberInput } from './Form.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactForm = function () {\n  _s();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = event.target.elements.name.value;\n    const number = event.target.elements.number.value;\n    const existingContact = contacts.find(contact => contact.name === name && contact.number === number);\n\n    if (existingContact) {\n      toast.error(`Uuum, the contact with name ${name} and phone number ${number} is already in the list`);\n      return;\n    }\n\n    dispatch(addContact({\n      id: nanoid(),\n      name: name,\n      number: number,\n      userAvatar: `https://api.dicebear.com/5.x/adventurer/svg?seed=Natasha`\n    }));\n    form.reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContactsForm, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Add new contact :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name :\", /*#__PURE__*/_jsxDEV(NameInput, {\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true,\n        placeholder: \"Nataliia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Number :\", /*#__PURE__*/_jsxDEV(NumberInput, {\n        type: \"tel\",\n        name: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true,\n        placeholder: \"+380XXXXXXXXX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: [/*#__PURE__*/_jsxDEV(AiOutlineUserAdd, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }, this), \"Add contact\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactForm, \"sydSEEMVkiloeUptxkxmL6nxG7A=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/mcb/Desktop/Full stack/Репозиторії/goit-react-hw-07-phonebook/src/components/Form/Form.jsx"],"names":["nanoid","React","useDispatch","useSelector","addContact","toast","ContactsForm","Title","Button","NameInput","NumberInput","ContactForm","dispatch","contacts","state","items","handleSubmit","event","preventDefault","form","target","name","elements","value","number","existingContact","find","contact","error","id","userAvatar","reset"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,YAAT,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,SAAtC,EAAiDC,WAAjD,QAAoE,eAApE;;AAGA,OAAO,MAAMC,WAAW,GAAG,YAAY;AAAA;;AACrC,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,QAAQ,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeE,KAAzB,CAA5B;;AAEA,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,MAAnB;AACA,UAAMC,IAAI,GAAGJ,KAAK,CAACG,MAAN,CAAaE,QAAb,CAAsBD,IAAtB,CAA2BE,KAAxC;AACA,UAAMC,MAAM,GAAGP,KAAK,CAACG,MAAN,CAAaE,QAAb,CAAsBE,MAAtB,CAA6BD,KAA5C;AACA,UAAME,eAAe,GAAGZ,QAAQ,CAACa,IAAT,CACtBC,OAAO,IAAIA,OAAO,CAACN,IAAR,KAAiBA,IAAjB,IAAyBM,OAAO,CAACH,MAAR,KAAmBA,MADjC,CAAxB;;AAIA,QAAIC,eAAJ,EAAqB;AACnBpB,MAAAA,KAAK,CAACuB,KAAN,CACG,+BAA8BP,IAAK,qBAAoBG,MAAO,yBADjE;AAGA;AACD;;AAEDZ,IAAAA,QAAQ,CACNR,UAAU,CAAC;AACTyB,MAAAA,EAAE,EAAE7B,MAAM,EADD;AAETqB,MAAAA,IAAI,EAAEA,IAFG;AAGTG,MAAAA,MAAM,EAAEA,MAHC;AAITM,MAAAA,UAAU,EAAI;AAJL,KAAD,CADJ,CAAR;AASAX,IAAAA,IAAI,CAACY,KAAL;AACD,GA1BD;;AA4BA,sBACE,QAAC,YAAD;AAAc,IAAA,QAAQ,EAAEf,YAAxB;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,wCAEE,QAAC,SAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,OAAO,EAAC,wHAHV;AAIE,QAAA,KAAK,EAAC,wIAJR;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAcE;AAAA,0CAEE,QAAC,WAAD;AACE,QAAA,IAAI,EAAC,KADP;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAC,wFAHV;AAIE,QAAA,KAAK,EAAC,8FAJR;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,eAyBE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA,8BAAsB,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA7DM;;GAAML,W;UACMT,W,EACAC,W;;;KAFNQ,W","sourcesContent":["import { nanoid } from '@reduxjs/toolkit';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contactsOperations';\nimport { toast } from 'react-hot-toast';\nimport { ContactsForm, Title, Button, NameInput, NumberInput } from './Form.styled';\n\n\nexport const ContactForm = function () {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = event.target.elements.name.value;\n    const number = event.target.elements.number.value;\n    const existingContact = contacts.find(\n      contact => contact.name === name && contact.number === number\n    );\n\n    if (existingContact) {\n      toast.error(\n        `Uuum, the contact with name ${name} and phone number ${number} is already in the list`\n      );\n      return;\n    }\n\n    dispatch(\n      addContact({\n        id: nanoid(),\n        name: name,\n        number: number,\n        userAvatar : `https://api.dicebear.com/5.x/adventurer/svg?seed=Natasha`,\n      })\n    );\n    \n    form.reset();\n  };\n\n  return (\n    <ContactsForm onSubmit={handleSubmit}>\n      <Title>Add new contact :</Title>\n      <label>\n        Name :\n        <NameInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Nataliia\"\n        />\n      </label>\n\n      <label>\n        Number :\n        <NumberInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"+380XXXXXXXXX\"\n        />\n      </label>\n      <Button type=\"submit\"><AiOutlineUserAdd/>Add contact</Button>\n    </ContactsForm>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}