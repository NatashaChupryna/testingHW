{"ast":null,"code":"var _jsxFileName = \"/Users/mcb/Desktop/Full stack/\\u0420\\u0435\\u043F\\u043E\\u0437\\u0438\\u0442\\u043E\\u0440\\u0456\\u0456\\u0308/testingHW/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, lazy } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Route, Routes } from 'react-router-dom';\nimport { Layout } from './Layout';\nimport { PrivateRoute } from './PrivateRoute';\nimport { RestrictedRoute } from './RestrictedRoute';\nimport { refreshUser } from 'redux/auth/operations';\nimport { useAuth } from 'hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = /*#__PURE__*/lazy(_c = () => import('../pages/Home'));\n_c2 = HomePage;\nconst RegisterPage = /*#__PURE__*/lazy(_c3 = () => import('../pages/Register'));\n_c4 = RegisterPage;\nconst LoginPage = /*#__PURE__*/lazy(_c5 = () => import('../pages/Login'));\n_c6 = LoginPage;\nconst TasksPage = /*#__PURE__*/lazy(_c7 = () => import('../pages/Tasks'));\n_c8 = TasksPage;\nexport const App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    isRefreshing\n  } = useAuth();\n  useEffect(() => {\n    dispatch(refreshUser());\n  }, [dispatch]);\n  return isRefreshing ? /*#__PURE__*/_jsxDEV(\"b\", {\n    children: \"Refreshing user...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 32\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(RestrictedRoute, {\n          redirectTo: \"/tasks\",\n          component: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(RestrictedRoute, {\n          redirectTo: \"/tasks\",\n          component: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/tasks\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          redirectTo: \"/login\",\n          component: /*#__PURE__*/_jsxDEV(TasksPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"jfpZS0BPDRH4/+4rZuoQjSHXl/Q=\", false, function () {\n  return [useDispatch, useAuth];\n});\n\n_c9 = App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"HomePage$lazy\");\n$RefreshReg$(_c2, \"HomePage\");\n$RefreshReg$(_c3, \"RegisterPage$lazy\");\n$RefreshReg$(_c4, \"RegisterPage\");\n$RefreshReg$(_c5, \"LoginPage$lazy\");\n$RefreshReg$(_c6, \"LoginPage\");\n$RefreshReg$(_c7, \"TasksPage$lazy\");\n$RefreshReg$(_c8, \"TasksPage\");\n$RefreshReg$(_c9, \"App\");","map":{"version":3,"sources":["/Users/mcb/Desktop/Full stack/Репозиторії/testingHW/src/components/App.js"],"names":["useEffect","lazy","useDispatch","Route","Routes","Layout","PrivateRoute","RestrictedRoute","refreshUser","useAuth","HomePage","RegisterPage","LoginPage","TasksPage","App","dispatch","isRefreshing"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,MAAMC,QAAQ,gBAAGT,IAAI,MAAC,MAAM,OAAO,eAAP,CAAP,CAArB;MAAMS,Q;AACN,MAAMC,YAAY,gBAAGV,IAAI,OAAC,MAAM,OAAO,mBAAP,CAAP,CAAzB;MAAMU,Y;AACN,MAAMC,SAAS,gBAAGX,IAAI,OAAC,MAAM,OAAO,gBAAP,CAAP,CAAtB;MAAMW,S;AACN,MAAMC,SAAS,gBAAGZ,IAAI,OAAC,MAAM,OAAO,gBAAP,CAAP,CAAtB;MAAMY,S;AAEN,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAmBP,OAAO,EAAhC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACD,GAFQ,EAEN,CAACO,QAAD,CAFM,CAAT;AAIA,SAAOC,YAAY,gBACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADiB,gBAGjB,QAAC,MAAD;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAAzB;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,OAAO,eACL,QAAC,eAAD;AAAiB,UAAA,UAAU,EAAC,QAA5B;AAAqC,UAAA,SAAS,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,eACL,QAAC,eAAD;AAAiB,UAAA,UAAU,EAAC,QAA5B;AAAqC,UAAA,SAAS,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cARF,eAcE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,eACL,QAAC,YAAD;AAAc,UAAA,UAAU,EAAC,QAAzB;AAAkC,UAAA,SAAS,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAA7C;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAHF;AA2BD,CAnCM;;GAAMF,G;UACMZ,W,EACQO,O;;;MAFdK,G","sourcesContent":["import { useEffect, lazy } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Route, Routes } from 'react-router-dom';\nimport { Layout } from './Layout';\nimport { PrivateRoute } from './PrivateRoute';\nimport { RestrictedRoute } from './RestrictedRoute';\nimport { refreshUser } from 'redux/auth/operations';\nimport { useAuth } from 'hooks';\n\nconst HomePage = lazy(() => import('../pages/Home'));\nconst RegisterPage = lazy(() => import('../pages/Register'));\nconst LoginPage = lazy(() => import('../pages/Login'));\nconst TasksPage = lazy(() => import('../pages/Tasks'));\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const { isRefreshing } = useAuth();\n\n  useEffect(() => {\n    dispatch(refreshUser());\n  }, [dispatch]);\n\n  return isRefreshing ? (\n    <b>Refreshing user...</b>\n  ) : (\n    <Routes>\n      <Route path=\"/\" element={<Layout />}>\n        <Route index element={<HomePage />} />\n        <Route\n          path=\"/register\"\n          element={\n            <RestrictedRoute redirectTo=\"/tasks\" component={<RegisterPage />} />\n          }\n        />\n        <Route\n          path=\"/login\"\n          element={\n            <RestrictedRoute redirectTo=\"/tasks\" component={<LoginPage />} />\n          }\n        />\n        <Route\n          path=\"/tasks\"\n          element={\n            <PrivateRoute redirectTo=\"/login\" component={<TasksPage />} />\n          }\n        />\n      </Route>\n    </Routes>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}