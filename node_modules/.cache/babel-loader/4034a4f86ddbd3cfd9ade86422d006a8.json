{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchContacts, addContact, deleteContact } from './operations'; // const initialState = [{ id: 1, name: 'Bradd Pitt', number: 232 - 34 - 56 }];\n// const contactsSlice = createSlice({\n//   name: 'contacts',\n//   initialState: initialState,\n//   reducers: {\n//     addContact(state, action) {\n//       return [...state, action.payload];\n//     },\n//     deleteContact(state, action) {\n//       const index = state.findIndex(\n//         contact => contact.id === action.payload.id\n//       );\n//       state.splice(index, 1);\n//     },\n//   },\n// });\n// export const { addContact, deleteContact } = contactsSlice.actions;\n// export const contactsReducer = contactsSlice.reducer;\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    isLoading: false,\n    error: null\n  },\n  extraReducers: {\n    [fetchContacts.pending](state) {\n      return { ...state,\n        isLoading: true\n      };\n    },\n\n    [fetchContacts.fulfilled](state, action) {\n      return { ...state,\n        items: [...action.payload],\n        isLoading: false,\n        error: null\n      };\n    },\n\n    [fetchContacts.rejected](state, action) {\n      return { ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    },\n\n    [addContact.pending](state) {\n      return { ...state,\n        isLoading: true\n      };\n    },\n\n    [addContact.fulfilled](state, action) {\n      return { ...state,\n        items: [...state.items, action.payload],\n        isLoading: false,\n        error: null\n      };\n    },\n\n    [addContact.rejected](state, action) {\n      return { ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    },\n\n    [deleteContact.pending](state) {\n      return { ...state,\n        isLoading: true\n      };\n    },\n\n    [deleteContact.fulfilled](state, action) {\n      return { ...state,\n        items: state.items.filter(contact => contact.id !== action.payload.id),\n        isLoading: false,\n        error: null\n      };\n    },\n\n    [deleteContact.rejected](state, action) {\n      return { ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    }\n\n  }\n});\nexport const contactsReducer = contactsSlice.reducer;","map":{"version":3,"sources":["/Users/mcb/Desktop/Full stack/Репозиторії/goit-react-hw-07-phonebook/src/redux/contactsSlice.js"],"names":["createSlice","fetchContacts","addContact","deleteContact","contactsSlice","name","initialState","items","isLoading","error","extraReducers","pending","state","fulfilled","action","payload","rejected","filter","contact","id","contactsReducer","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { fetchContacts, addContact, deleteContact } from './operations';\n\n// const initialState = [{ id: 1, name: 'Bradd Pitt', number: 232 - 34 - 56 }];\n\n// const contactsSlice = createSlice({\n//   name: 'contacts',\n//   initialState: initialState,\n//   reducers: {\n//     addContact(state, action) {\n//       return [...state, action.payload];\n//     },\n//     deleteContact(state, action) {\n//       const index = state.findIndex(\n//         contact => contact.id === action.payload.id\n//       );\n//       state.splice(index, 1);\n//     },\n//   },\n// });\n\n// export const { addContact, deleteContact } = contactsSlice.actions;\n// export const contactsReducer = contactsSlice.reducer;\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    isLoading: false,\n    error: null,\n  },\n  extraReducers: {\n    [fetchContacts.pending](state) {return { ...state, isLoading: true };\n    },\n    [fetchContacts.fulfilled](state, action) {\n      return {\n        ...state,\n        items: [...action.payload],\n        isLoading: false,\n        error: null,};\n      },\n    [fetchContacts.rejected](state, action) {return { ...state, isLoading: false, error: action.payload };\n    },\n\n    [addContact.pending](state) {return { ...state, isLoading: true };\n    },\n    [addContact.fulfilled](state, action) {return {\n        ...state,\n        items: [...state.items, action.payload],\n        isLoading: false,\n        error: null,};\n    },\n    [addContact.rejected](state, action) {return { ...state, isLoading: false, error: action.payload };\n    },\n    [deleteContact.pending](state) {return { ...state, isLoading: true };\n    },\n    [deleteContact.fulfilled](state, action) {\n      return {\n        ...state,\n        items: state.items.filter(contact => contact.id !== action.payload.id),\n        isLoading: false,\n        error: null,};\n    },\n    [deleteContact.rejected](state, action) {return { ...state, isLoading: false, error: action.payload };\n    },\n  },\n});\n\nexport const contactsReducer = contactsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}