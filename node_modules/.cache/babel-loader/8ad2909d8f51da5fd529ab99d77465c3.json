{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit'; // import { persistStore, persistReducer } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\n// import {\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from 'redux-persist';\n// import { combineReducers } from 'redux';\n\nimport { contactsReducer } from './contactsSlice';\nimport { filtersReducer } from './filtersSlice';\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    filter: filtersReducer\n  }\n}); // const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n//   filter: filtersReducer,\n// });\n// const persistConfig = {\n//   key: 'contacts',\n//   storage,\n// };\n// export const persistedContactsReducer = persistReducer(\n//   persistConfig,\n//   rootReducer\n// );\n// export const store = configureStore({\n//   reducer: persistedContactsReducer,\n//   middleware: getDefaultMiddleware =>\n//     getDefaultMiddleware({\n//       serializableCheck: {\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//       },\n//     }),\n// });\n// export const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/mcb/Desktop/Full stack/Репозиторії/goit-react-hw-07-phonebook/src/redux/store.js"],"names":["configureStore","contactsReducer","filtersReducer","store","reducer","contacts","filter"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAGA,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;AAClCI,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAEJ,eADH;AAEPK,IAAAA,MAAM,EAAEJ;AAFD;AADyB,CAAD,CAA5B,C,CAMP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\n// import { persistStore, persistReducer } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\n// import {\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from 'redux-persist';\n// import { combineReducers } from 'redux';\nimport { contactsReducer } from './contactsSlice';\nimport { filtersReducer } from './filtersSlice';\n\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    filter: filtersReducer,\n  },\n});\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n//   filter: filtersReducer,\n// });\n\n// const persistConfig = {\n//   key: 'contacts',\n//   storage,\n// };\n\n// export const persistedContactsReducer = persistReducer(\n//   persistConfig,\n//   rootReducer\n// );\n\n// export const store = configureStore({\n//   reducer: persistedContactsReducer,\n//   middleware: getDefaultMiddleware =>\n//     getDefaultMiddleware({\n//       serializableCheck: {\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//       },\n//     }),\n// });\n\n// export const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}