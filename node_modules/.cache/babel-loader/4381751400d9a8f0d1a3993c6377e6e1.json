{"ast":null,"code":"var _jsxFileName = \"/Users/mcb/Desktop/Full stack/\\u0420\\u0435\\u043F\\u043E\\u0437\\u0438\\u0442\\u043E\\u0440\\u0456\\u0456\\u0308/testingHW/src/components/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from 'hooks';\n/**\n * - If the route is private and the user is logged in, render the component\n * - Otherwise render <Navigate> to redirectTo\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PrivateRoute = _ref => {\n  _s();\n\n  let {\n    component: Component,\n    redirectTo = '/'\n  } = _ref;\n  const {\n    isLoggedIn,\n    isRefreshing\n  } = useAuth();\n  const shouldRedirect = !isLoggedIn && !isRefreshing;\n  return shouldRedirect ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: redirectTo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 27\n  }, this) : Component;\n};\n\n_s(PrivateRoute, \"C+M4LHzJ46+wcoSy8Ru75ArEOC0=\", false, function () {\n  return [useAuth];\n});\n\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/mcb/Desktop/Full stack/Репозиторії/testingHW/src/components/PrivateRoute.js"],"names":["Navigate","useAuth","PrivateRoute","component","Component","redirectTo","isLoggedIn","isRefreshing","shouldRedirect"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,YAAY,GAAG,QAAgD;AAAA;;AAAA,MAA/C;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwBC,IAAAA,UAAU,GAAG;AAArC,GAA+C;AAC1E,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA+BN,OAAO,EAA5C;AACA,QAAMO,cAAc,GAAG,CAACF,UAAD,IAAe,CAACC,YAAvC;AACA,SAAOC,cAAc,gBAAG,QAAC,QAAD;AAAU,IAAA,EAAE,EAAEH;AAAd;AAAA;AAAA;AAAA;AAAA,UAAH,GAAkCD,SAAvD;AACD,CAJM;;GAAMF,Y;UAC0BD,O;;;KAD1BC,Y","sourcesContent":["import { Navigate } from 'react-router-dom';\nimport { useAuth } from 'hooks';\n\n/**\n * - If the route is private and the user is logged in, render the component\n * - Otherwise render <Navigate> to redirectTo\n */\n\nexport const PrivateRoute = ({ component: Component, redirectTo = '/' }) => {\n  const { isLoggedIn, isRefreshing } = useAuth();\n  const shouldRedirect = !isLoggedIn && !isRefreshing;\n  return shouldRedirect ? <Navigate to={redirectTo} /> : Component;\n};\n"]},"metadata":{},"sourceType":"module"}