{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchContacts } from './Contacts/ContactsOperations';\nconst initialState = [{\n  id: 1,\n  name: 'Bradd Pitt',\n  number: 232 - 34 - 56\n}];\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: initialState,\n  // initialState : {\n  //   items: [],\n  //   isLoading: false,\n  //   error: null,\n  // },\n  reducers: {\n    addContact(state, action) {\n      return [...state, action.payload];\n    },\n\n    deleteContact(state, action) {\n      const index = state.findIndex(contact => contact.id === action.payload.id);\n      state.splice(index, 1);\n    }\n\n  }\n});\nexport const {\n  addContact,\n  deleteContact\n} = contactsSlice.actions;\nexport const contactsReducer = contactsSlice.reducer;\nconst contactsSlice1 = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    isLoading: false,\n    eroor: null\n  },\n  extraReducers: {}\n});","map":{"version":3,"sources":["/Users/mcb/Desktop/Full stack/Репозиторії/goit-react-hw-07-phonebook/src/redux/contactsSlice.js"],"names":["createSlice","fetchContacts","initialState","id","name","number","contactsSlice","reducers","addContact","state","action","payload","deleteContact","index","findIndex","contact","splice","actions","contactsReducer","reducer","contactsSlice1","items","isLoading","eroor","extraReducers"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAAQC,aAAR,QAA4B,+BAA5B;AAGA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,YAAf;AAA6BC,EAAAA,MAAM,EAAE,MAAM,EAAN,GAAW;AAAhD,CAAD,CAArB;AAEA,MAAMC,aAAa,GAAGN,WAAW,CAAC;AAChCI,EAAAA,IAAI,EAAE,UAD0B;AAEhCF,EAAAA,YAAY,EAAEA,YAFkB;AAGhC;AACA;AACA;AACA;AACA;AACAK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACxB,aAAO,CAAC,GAAGD,KAAJ,EAAWC,MAAM,CAACC,OAAlB,CAAP;AACD,KAHO;;AAIRC,IAAAA,aAAa,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMG,KAAK,GAAGJ,KAAK,CAACK,SAAN,CACZC,OAAO,IAAIA,OAAO,CAACZ,EAAR,KAAeO,MAAM,CAACC,OAAP,CAAeR,EAD7B,CAAd;AAGAM,MAAAA,KAAK,CAACO,MAAN,CAAaH,KAAb,EAAoB,CAApB;AACD;;AATO;AARsB,CAAD,CAAjC;AAqBA,OAAO,MAAM;AAAEL,EAAAA,UAAF;AAAcI,EAAAA;AAAd,IAAgCN,aAAa,CAACW,OAApD;AACP,OAAO,MAAMC,eAAe,GAAGZ,aAAa,CAACa,OAAtC;AAGP,MAAMC,cAAc,GAAGpB,WAAW,CAAC;AACjCI,EAAAA,IAAI,EAAG,UAD0B;AAEjCF,EAAAA,YAAY,EAAG;AACbmB,IAAAA,KAAK,EAAG,EADK;AAEbC,IAAAA,SAAS,EAAG,KAFC;AAGbC,IAAAA,KAAK,EAAG;AAHK,GAFkB;AAOjCC,EAAAA,aAAa,EAAG;AAPiB,CAAD,CAAlC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport {fetchContacts} from './Contacts/ContactsOperations'\n\n\nconst initialState = [{ id: 1, name: 'Bradd Pitt', number: 232 - 34 - 56 }];\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: initialState,\n  // initialState : {\n  //   items: [],\n  //   isLoading: false,\n  //   error: null,\n  // },\n  reducers: {\n    addContact(state, action) {\n      return [...state, action.payload];\n    },\n    deleteContact(state, action) {\n      const index = state.findIndex(\n        contact => contact.id === action.payload.id\n      );\n      state.splice(index, 1);\n    },\n  },\n});\n\nexport const { addContact, deleteContact } = contactsSlice.actions;\nexport const contactsReducer = contactsSlice.reducer;\n\n\nconst contactsSlice1 = createSlice({\n  name : 'contacts',\n  initialState : {\n    items : [],\n    isLoading : false,\n    eroor : null,\n  },\n  extraReducers : {\n    \n  }\n})"]},"metadata":{},"sourceType":"module"}