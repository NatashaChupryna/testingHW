{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchContacts } from './Contacts/ContactsOperations';\nconst initialState = [{\n  id: 1,\n  name: 'Bradd Pitt',\n  number: 232 - 34 - 56\n}];\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: initialState,\n  // initialState : {\n  //   items: [],\n  //   isLoading: false,\n  //   error: null,\n  // },\n  reducers: {\n    addContact(state, action) {\n      return [...state, action.payload];\n    },\n\n    deleteContact(state, action) {\n      const index = state.findIndex(contact => contact.id === action.payload.id);\n      state.splice(index, 1);\n    }\n\n  }\n});\nexport const {\n  addContact,\n  deleteContact\n} = contactsSlice.actions;\nexport const contactsReducer = contactsSlice.reducer;\nconst contactsSlice1 = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    isLoading: false,\n    error: null\n  },\n  extraReducers: {\n    [fetchContacts.pending](state) {\n      return { ...state,\n        isLoading: true\n      };\n    },\n\n    [fetchContacts.fulfilled](state, action) {\n      return { ...state,\n        items: [...action.payload],\n        isLoading: false,\n        error: null\n      };\n    },\n\n    [fetchContacts.rejected](state, action) {\n      return { ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    },\n\n    [addContact.pending](state) {\n      return { ...state,\n        isLoading: true\n      };\n    },\n\n    [addContact.fulfilled](state, action) {\n      return { ...state,\n        items: [...state.items, action.payload],\n        isLoading: false,\n        error: null\n      };\n    },\n\n    [addContact.rejected](state, action) {\n      return { ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    },\n\n    [deleteContact.pending](state) {\n      return { ...state,\n        isLoading: true\n      };\n    },\n\n    [deleteContact.fulfilled](state, action) {\n      return { ...state,\n        items: state.items.filter(contact => contact.id !== action.payload.id),\n        isLoading: false,\n        error: null\n      };\n    },\n\n    [deleteContact.rejected](state, action) {\n      return { ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    }\n\n  }\n});\nexport const contactsReducer1 = contactsSlice.reducer;","map":{"version":3,"sources":["/Users/mcb/Desktop/Full stack/Репозиторії/goit-react-hw-07-phonebook/src/redux/contactsSlice.js"],"names":["createSlice","fetchContacts","initialState","id","name","number","contactsSlice","reducers","addContact","state","action","payload","deleteContact","index","findIndex","contact","splice","actions","contactsReducer","reducer","contactsSlice1","items","isLoading","error","extraReducers","pending","fulfilled","rejected","filter","contactsReducer1"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { fetchContacts } from './Contacts/ContactsOperations';\n\nconst initialState = [{ id: 1, name: 'Bradd Pitt', number: 232 - 34 - 56 }];\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: initialState,\n  // initialState : {\n  //   items: [],\n  //   isLoading: false,\n  //   error: null,\n  // },\n  reducers: {\n    addContact(state, action) {\n      return [...state, action.payload];\n    },\n    deleteContact(state, action) {\n      const index = state.findIndex(\n        contact => contact.id === action.payload.id\n      );\n      state.splice(index, 1);\n    },\n  },\n});\n\nexport const { addContact, deleteContact } = contactsSlice.actions;\nexport const contactsReducer = contactsSlice.reducer;\n\nconst contactsSlice1 = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    isLoading: false,\n    error: null,\n  },\n  extraReducers: {\n    [fetchContacts.pending](state) {return { ...state, isLoading: true };\n    },\n    [fetchContacts.fulfilled](state, action) {\n      return {\n        ...state,\n        items: [...action.payload],\n        isLoading: false,\n        error: null,};\n      },\n    [fetchContacts.rejected](state, action) {\n      return { ...state, isLoading: false, error: action.payload };\n    },\n\n    [addContact.pending](state) {\n      return { ...state, isLoading: true };\n    },\n    [addContact.fulfilled](state, action) {\n      return {\n        ...state,\n        items: [...state.items, action.payload],\n        isLoading: false,\n        error: null,\n      };\n    },\n    [addContact.rejected](state, action) {\n      return { ...state, isLoading: false, error: action.payload };\n    },\n\n    [deleteContact.pending](state) {\n      return { ...state, isLoading: true };\n    },\n    [deleteContact.fulfilled](state, action) {\n      return {\n        ...state,\n        items: state.items.filter(contact => contact.id !== action.payload.id),\n        isLoading: false,\n        error: null,\n      };\n    },\n    [deleteContact.rejected](state, action) {\n      return { ...state, isLoading: false, error: action.payload };\n    },\n  },\n});\n\nexport const contactsReducer1 = contactsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}